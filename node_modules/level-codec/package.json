{
  "_args": [
    [
      {
        "raw": "level-codec@7.0.0",
        "scope": null,
        "escapedName": "level-codec",
        "name": "level-codec",
        "rawSpec": "7.0.0",
        "spec": "7.0.0",
        "type": "version"
      },
      "D:\\My Documents\\MUICT\\Wireless and Mobile Computing\\Tappo\\node_modules\\pouchdb"
    ]
  ],
  "_from": "level-codec@7.0.0",
  "_id": "level-codec@7.0.0",
  "_inCache": true,
  "_location": "/level-codec",
  "_nodeVersion": "4.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/level-codec-7.0.0.tgz_1485447516741_0.3182766861282289"
  },
  "_npmUser": {
    "name": "juliangruber",
    "email": "julian@juliangruber.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "level-codec@7.0.0",
    "scope": null,
    "escapedName": "level-codec",
    "name": "level-codec",
    "rawSpec": "7.0.0",
    "spec": "7.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/pouchdb"
  ],
  "_resolved": "https://registry.npmjs.org/level-codec/-/level-codec-7.0.0.tgz",
  "_shasum": "c755b68d0d44ffa0b1cba044b8f81a55a14ad39b",
  "_shrinkwrap": null,
  "_spec": "level-codec@7.0.0",
  "_where": "D:\\My Documents\\MUICT\\Wireless and Mobile Computing\\Tappo\\node_modules\\pouchdb",
  "bugs": {
    "url": "https://github.com/Level/codec/issues"
  },
  "dependencies": {},
  "description": "Levelup's encoding logic",
  "devDependencies": {
    "tape": "^4.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c755b68d0d44ffa0b1cba044b8f81a55a14ad39b",
    "tarball": "https://registry.npmjs.org/level-codec/-/level-codec-7.0.0.tgz"
  },
  "gitHead": "c0db8099897ab50192fb51667b19046e51eefc0a",
  "homepage": "https://github.com/Level/codec#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    },
    {
      "name": "ralphtheninja",
      "email": "ralphtheninja@riseup.net"
    }
  ],
  "name": "level-codec",
  "optionalDependencies": {},
  "readme": "\n# level-codec\n\n<img alt=\"LevelDB Logo\" height=\"100\" src=\"http://leveldb.org/img/logo.svg\">\n\n**[LevelUP's](https://github.com/rvagg/node-levelup) encoding logic.**\n\n[![Build Status](https://travis-ci.org/Level/codec.png)](https://travis-ci.org/Level/codec)\n\n## API\n\n### Codec([opts])\n\n  Create a new codec, with a global options object.\n\n  This could be something like\n\n```js\nvar codec = new Codec(db.options);\n```\n\n### #encodeKey(key[, opts])\n\n  Encode `key` with given `opts`.\n\n### #encodeValue(value[, opts])\n\n  Encode `value` with given `opts`.\n\n### #encodeBatch(batch[, opts])\n\n  Encode `batch` ops with given `opts`.\n\n### #encodeLtgt(ltgt)\n\n  Encode the ltgt values of option object `ltgt`.\n\n### #decodeKey(key[, opts])\n\n  Decode `key` with given `opts`.\n\n### #decodeValue(value[, opts])\n\n  Decode `value` with given `opts`.\n\n### #createStreamDecoder([opts])\n\n  Create a function with signature `(key, value)`, that for each key/value pair returned from a levelup read stream returns the decoded value to be emitted.\n\n### #keyAsBuffer([opts])\n\n  Check whether `opts` and the global `opts` call for a binary key encoding.\n\n### #valueAsBuffer([opts])\n\n  Check whether `opts` and the global `opts` call for a binary value encoding.\n\n### #encodings\n\n  The supported encodings as object of form\n\n```js\n{\n  \"name\": {\n    \"encode\": Function,\n    \"decode\": Function,\n    \"buffer\": Boolean,\n    \"type\": String\n  }\n}\n```\n\n  Currently supported encodings:\n\n  - utf8\n  - json\n  - binary\n  - hex\n  - ascii\n  - base64\n  - ucs2\n  - ucs-2\n  - utf16le\n  - utf-16le\n  - none (bypass level-codec)\n\n## Publishers\n\n* [@juliangruber](https://github.com/juliangruber)\n* [@ralphtheninja](https://github.com/ralphtheninja)\n\n## License &amp; copyright\n\nCopyright (c) 2012-2015 LevelUP contributors.\n\nLevelUP is licensed under the MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE.md file for more details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Level/codec.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "7.0.0"
}
